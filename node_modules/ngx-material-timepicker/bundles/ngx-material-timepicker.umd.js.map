{"version":3,"file":"ngx-material-timepicker.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://ngx-material-timepicker/src/app/material-timepicker/models/time-period.enum.ts","ng://ngx-material-timepicker/src/app/material-timepicker/models/time-format.enum.ts","ng://ngx-material-timepicker/src/app/material-timepicker/services/time-adapter.ts","ng://ngx-material-timepicker/src/app/material-timepicker/services/ngx-material-timepicker.service.ts","ng://ngx-material-timepicker/src/app/material-timepicker/models/time-unit.enum.ts","ng://ngx-material-timepicker/src/app/material-timepicker/services/ngx-material-timepicker-event.service.ts","ng://ngx-material-timepicker/src/app/material-timepicker/ngx-material-timepicker.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/ngx-material-timepicker-toggle-icon.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-toggle-button/ngx-material-timepicker-toggle.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/ngx-timepicker.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/ngx-material-timepicker-theme.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/timepicker-time.namespace.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-hours-face/ngx-material-timepicker-hours-face.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-24-hours-face/ngx-material-timepicker-24-hours-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-12-hours-face/ngx-material-timepicker-12-hours-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-face/ngx-material-timepicker-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-button/ngx-material-timepicker-button.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-dial/ngx-material-timepicker-dial.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/time-formatter.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-dial-control/ngx-material-timepicker-dial-control.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-period/ngx-material-timepicker-period.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/style-sanitizer.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/overlay.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/minutes-formatter.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/autofocus.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/ngx-material-timepicker.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum TimePeriod {\r\n    AM = 'AM',\r\n    PM = 'PM'\r\n}\r\n","export enum TimeFormat {\r\n    TWELVE = 'hh:mm a',\r\n    TWENTY_FOUR = 'HH:mm'\r\n}\r\n","import * as _moment from 'moment';\r\nimport {Moment, unitOfTime} from 'moment';\r\nimport {TimeFormat} from '../models/time-format.enum';\r\nimport {TimePeriod} from '../models/time-period.enum';\r\n\r\nconst moment = _moment;\r\n\r\nexport class TimeAdapter {\r\n\r\n    static formatTime(time: string, format = 12): string {\r\n        const timeFormat = format === 24 ? TimeFormat.TWENTY_FOUR : TimeFormat.TWELVE;\r\n        return moment(time, TimeFormat.TWELVE).format(timeFormat);\r\n    }\r\n\r\n    static convertTimeToMoment(time: string): Moment {\r\n        return moment(time, TimeFormat.TWELVE);\r\n    }\r\n\r\n    static isTimeAvailable(time: string, min?: Moment, max?: Moment, granularity?: unitOfTime.StartOf): boolean {\r\n        if (!time) {\r\n            return;\r\n        }\r\n        const convertedTime = this.convertTimeToMoment(time);\r\n        const isAfter = (min && !max)\r\n            && convertedTime.isSameOrAfter(min, granularity);\r\n        const isBefore = (max && !min)\r\n            && convertedTime.isSameOrBefore(max, granularity);\r\n        const isBetween = (min && max)\r\n            && convertedTime.isBetween(min, max, granularity, '[]');\r\n        const isAvailable = !min && !max;\r\n\r\n        return isAfter || isBefore || isBetween || isAvailable;\r\n    }\r\n\r\n    /***\r\n     *  Format hour according to time format (12 or 24)\r\n     */\r\n    static formatHour(currentHour: number, format: number, period: TimePeriod): number {\r\n        if (format === 24) {\r\n            return currentHour;\r\n        }\r\n        let hour = period === TimePeriod.AM ? currentHour : currentHour + 12;\r\n\r\n        if (period === TimePeriod.AM && hour === 12) {\r\n            return 0;\r\n        } else if (period === TimePeriod.PM && hour === 24) {\r\n            return 12;\r\n        }\r\n        return hour;\r\n    }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {ClockFaceTime} from '../models/clock-face-time.interface';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {TimePeriod} from '../models/time-period.enum';\r\nimport * as moment_ from 'moment';\r\nimport {TimeFormat} from '../models/time-format.enum';\r\nimport {TimeAdapter} from './time-adapter';\r\nimport {Moment} from 'moment';\r\n\r\nconst moment = moment_;\r\n\r\nconst DEFAULT_HOUR: ClockFaceTime = {\r\n    time: 12,\r\n    angle: 360\r\n};\r\nconst DEFAULT_MINUTE: ClockFaceTime = {\r\n    time: 0,\r\n    angle: 360\r\n};\r\n\r\n@Injectable()\r\nexport class NgxMaterialTimepickerService {\r\n\r\n    private hourSubject = new BehaviorSubject<ClockFaceTime>(DEFAULT_HOUR);\r\n    private minuteSubject = new BehaviorSubject<ClockFaceTime>(DEFAULT_MINUTE);\r\n    private periodSubject = new BehaviorSubject<TimePeriod>(TimePeriod.AM);\r\n\r\n    private set defaultTime(time: string) {\r\n        const defaultTime = moment(time, TimeFormat.TWENTY_FOUR).toDate();\r\n\r\n        if (moment(defaultTime).isValid()) {\r\n            this.hour = {...DEFAULT_HOUR, time: defaultTime.getHours()};\r\n            this.minute = {...DEFAULT_MINUTE, time: defaultTime.getMinutes()};\r\n            this.period = <TimePeriod>time.substr(time.length - 2).toUpperCase();\r\n        } else {\r\n            this.resetTime();\r\n        }\r\n    }\r\n\r\n    set hour(hour: ClockFaceTime) {\r\n        this.hourSubject.next(hour);\r\n    }\r\n\r\n    get selectedHour(): Observable<ClockFaceTime> {\r\n        return this.hourSubject.asObservable();\r\n    }\r\n\r\n    set minute(minute: ClockFaceTime) {\r\n        this.minuteSubject.next(minute);\r\n    }\r\n\r\n    get selectedMinute(): Observable<ClockFaceTime> {\r\n        return this.minuteSubject.asObservable();\r\n    }\r\n\r\n    set period(period: TimePeriod) {\r\n        this.periodSubject.next(period);\r\n    }\r\n\r\n    get selectedPeriod(): Observable<TimePeriod> {\r\n        return this.periodSubject.asObservable();\r\n    }\r\n\r\n\r\n    setDefaultTimeIfAvailable(time: string, min: Moment, max: Moment, format: number) {\r\n        if (TimeAdapter.isTimeAvailable(time, min, max, 'minutes')) {\r\n            this.defaultTime = TimeAdapter.formatTime(time, format);\r\n        }\r\n    }\r\n\r\n    getFullTime(format: number): string {\r\n        const hour = this.hourSubject.getValue().time;\r\n        const minute = this.minuteSubject.getValue().time;\r\n        const period = format === 12 ? this.periodSubject.getValue() : '';\r\n\r\n        return TimeAdapter.formatTime(`${hour}:${minute} ${period}`, format);\r\n    }\r\n\r\n    private resetTime(): void {\r\n        this.hour = {...DEFAULT_HOUR};\r\n        this.minute = {...DEFAULT_MINUTE};\r\n        this.period = TimePeriod.AM;\r\n    }\r\n}\r\n","export enum TimeUnit {\r\n    HOUR,\r\n    MINUTE\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class NgxMaterialTimepickerEventService {\r\n\r\n    private backdropClickSubject: Subject<MouseEvent> = new Subject();\r\n    private keydownEventSubject: Subject<KeyboardEvent> = new Subject();\r\n\r\n    get backdropClick(): Observable<MouseEvent> {\r\n        return this.backdropClickSubject.asObservable();\r\n    }\r\n\r\n    get keydownEvent(): Observable<KeyboardEvent> {\r\n        return this.keydownEventSubject.asObservable();\r\n    }\r\n\r\n    dispatchEvent(event: KeyboardEvent | MouseEvent): void {\r\n        switch (event.type) {\r\n            case 'click':\r\n                this.backdropClickSubject.next(<MouseEvent>event);\r\n                break;\r\n            case 'keydown':\r\n                this.keydownEventSubject.next(<KeyboardEvent>event);\r\n                break;\r\n            default:\r\n                throw new Error('no such event type');\r\n        }\r\n    }\r\n\r\n}\r\n","import {\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    HostListener,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    TemplateRef,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport {ClockFaceTime} from './models/clock-face-time.interface';\r\nimport {TimePeriod} from './models/time-period.enum';\r\nimport {merge, Subscription} from 'rxjs';\r\nimport {NgxMaterialTimepickerService} from './services/ngx-material-timepicker.service';\r\nimport {TimeUnit} from './models/time-unit.enum';\r\nimport {animate, AnimationEvent, style, transition, trigger} from '@angular/animations';\r\nimport {NgxMaterialTimepickerEventService} from './services/ngx-material-timepicker-event.service';\r\nimport {filter} from 'rxjs/operators';\r\nimport {TimepickerDirective} from './directives/ngx-timepicker.directive';\r\nimport {Moment} from 'moment';\r\n\r\nexport enum AnimationState {\r\n    ENTER = 'enter',\r\n    LEAVE = 'leave'\r\n}\r\n\r\n\r\n\r\nconst ESCAPE = 27;\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker',\r\n    templateUrl: './ngx-material-timepicker.component.html',\r\n    styleUrls: ['./ngx-material-timepicker.component.scss'],\r\n    animations: [\r\n        trigger('timepicker', [\r\n            transition(`* => ${AnimationState.ENTER}`, [\r\n                style({transform: 'translateY(-30%)'}),\r\n                animate('0.2s ease-out', style({transform: 'translateY(0)'}))\r\n            ]),\r\n            transition(`${AnimationState.ENTER} => ${AnimationState.LEAVE}`, [\r\n                style({transform: 'translateY(0)', opacity: 1}),\r\n                animate('0.2s ease-out', style({transform: 'translateY(-30%)', opacity: 0}))\r\n            ])\r\n        ])\r\n    ],\r\n    providers: [NgxMaterialTimepickerService]\r\n})\r\nexport class NgxMaterialTimepickerComponent implements OnInit, OnDestroy {\r\n\r\n    selectedHour: ClockFaceTime;\r\n    selectedMinute: ClockFaceTime;\r\n    selectedPeriod: TimePeriod;\r\n\r\n    timeUnit = TimeUnit;\r\n    activeTimeUnit = TimeUnit.HOUR;\r\n\r\n    isOpened = false;\r\n    animationState: AnimationState;\r\n\r\n    @Input() cancelBtnTmpl: TemplateRef<Node>;\r\n    @Input() confirmBtnTmpl: TemplateRef<Node>;\r\n    @Input('ESC') isEsc = true;\r\n    @Input() enableKeyboardInput: boolean;\r\n\r\n    @Input()\r\n    set minutesGap(gap: number) {\r\n        gap = Math.floor(gap);\r\n        this._minutesGap = gap <= 59 ? gap : 1;\r\n    }\r\n\r\n    get minutesGap(): number {\r\n        return this._minutesGap;\r\n    }\r\n\r\n    @Input()\r\n    set defaultTime(time: string) {\r\n        this.setDefaultTime(time);\r\n    }\r\n\r\n\r\n    @Output() timeSet = new EventEmitter<string>();\r\n    @Output() closed = new EventEmitter<null>();\r\n\r\n    @ViewChild('timepickerww') timepickerComponent: ElementRef;\r\n\r\n    private _minutesGap: number;\r\n    private timepickerInput: TimepickerDirective;\r\n    private subscriptions: Subscription[] = [];\r\n\r\n    constructor(private timepickerService: NgxMaterialTimepickerService,\r\n                private eventService: NgxMaterialTimepickerEventService) {\r\n\r\n        this.subscriptions.push(merge(this.eventService.backdropClick,\r\n            this.eventService.keydownEvent.pipe(filter(e => e.keyCode === ESCAPE && this.isEsc)))\r\n            .subscribe(() => this.close()));\r\n\r\n    }\r\n\r\n    get minTime(): string | Moment {\r\n        return this.timepickerInput && this.timepickerInput.min;\r\n    }\r\n\r\n    get maxTime(): string | Moment {\r\n        return this.timepickerInput && this.timepickerInput.max;\r\n    }\r\n\r\n    get disabled(): boolean {\r\n        return this.timepickerInput && this.timepickerInput.disabled;\r\n    }\r\n\r\n    get format(): number {\r\n        return this.timepickerInput && this.timepickerInput.format;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.subscriptions.push(this.timepickerService.selectedHour\r\n            .subscribe(hour => this.selectedHour = hour));\r\n\r\n        this.subscriptions.push(this.timepickerService.selectedMinute\r\n            .subscribe(minute => this.selectedMinute = minute));\r\n\r\n        this.subscriptions.push(this.timepickerService.selectedPeriod\r\n            .subscribe(period => this.selectedPeriod = period));\r\n    }\r\n\r\n    /***\r\n     * Register an input with this timepicker.\r\n     * input - The timepicker input to register with this timepicker\r\n     */\r\n    registerInput(input: TimepickerDirective): void {\r\n        if (this.timepickerInput) {\r\n            throw Error('A Timepicker can only be associated with a single input.');\r\n        }\r\n        this.timepickerInput = input;\r\n    }\r\n\r\n    onHourChange(hour: ClockFaceTime): void {\r\n        this.timepickerService.hour = hour;\r\n    }\r\n\r\n    onMinuteChange(minute: ClockFaceTime): void {\r\n        this.timepickerService.minute = minute;\r\n    }\r\n\r\n    changePeriod(period: TimePeriod): void {\r\n        this.timepickerService.period = period;\r\n    }\r\n\r\n    changeTimeUnit(unit: TimeUnit) {\r\n        this.activeTimeUnit = unit;\r\n    }\r\n\r\n    setTime() {\r\n        this.timeSet.next(this.timepickerService.getFullTime(this.format));\r\n        this.close();\r\n    }\r\n\r\n    setDefaultTime(time: string): void {\r\n        this.timepickerService.setDefaultTimeIfAvailable(time, this.minTime as Moment, this.maxTime as Moment, this.format);\r\n    }\r\n\r\n    open() {\r\n        this.isOpened = true;\r\n        this.animationState = AnimationState.ENTER;\r\n    }\r\n\r\n    close() {\r\n        this.animationState = AnimationState.LEAVE;\r\n    }\r\n\r\n    animationDone(event: AnimationEvent): void {\r\n        if (event.phaseName === 'done' && event.toState === AnimationState.LEAVE) {\r\n            this.isOpened = false;\r\n            this.activeTimeUnit = TimeUnit.HOUR;\r\n            this.closed.next();\r\n        }\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    onKeydown(e: KeyboardEvent) {\r\n        this.eventService.dispatchEvent(e);\r\n        e.stopPropagation();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\r\n    }\r\n}\r\n","import {Directive} from '@angular/core';\r\n\r\n/* To override a default toggle icon */\r\n@Directive({selector: '[ngxMaterialTimepickerToggleIcon]'})\r\n\r\nexport class NgxMaterialTimepickerToggleIconDirective {\r\n}\r\n","import {Component, ContentChild, Input} from '@angular/core';\r\nimport {NgxMaterialTimepickerToggleIconDirective} from '../../directives/ngx-material-timepicker-toggle-icon.directive';\r\nimport {NgxMaterialTimepickerComponent} from '../../ngx-material-timepicker.component';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-toggle',\r\n    templateUrl: 'ngx-material-timepicker-toggle.component.html',\r\n    styleUrls: ['ngx-material-timepicker-toggle.component.scss']\r\n})\r\n\r\nexport class NgxMaterialTimepickerToggleComponent {\r\n\r\n    @Input('for') timepicker: NgxMaterialTimepickerComponent;\r\n\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._disabled === undefined ? this.timepicker.disabled : this._disabled;\r\n    }\r\n\r\n    set disabled(value: boolean) {\r\n        this._disabled = value;\r\n    }\r\n\r\n    private _disabled: boolean;\r\n\r\n    @ContentChild(NgxMaterialTimepickerToggleIconDirective) customIcon: NgxMaterialTimepickerToggleIconDirective;\r\n\r\n    open(event): void {\r\n        if (this.timepicker) {\r\n            this.timepicker.open();\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n}\r\n","import {Directive, ElementRef, forwardRef, HostListener, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\r\nimport {NgxMaterialTimepickerComponent} from '../ngx-material-timepicker.component';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {Subscription} from 'rxjs';\r\nimport {Moment} from 'moment';\r\nimport {TimeAdapter} from '../services/time-adapter';\r\n\r\nconst VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TimepickerDirective),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n    selector: '[ngxTimepicker]',\r\n    providers: [VALUE_ACCESSOR],\r\n    host: {\r\n        '[disabled]': 'disabled',\r\n        '(input)': 'onInput($event.target.value)',\r\n        '(blur)': 'onTouched()',\r\n    },\r\n})\r\nexport class TimepickerDirective implements ControlValueAccessor, OnDestroy, OnChanges {\r\n\r\n    @Input()\r\n    set format(value: number) {\r\n        this._format = value === 24 ? 24 : 12;\r\n    }\r\n\r\n    get format(): number {\r\n        return this._format;\r\n    }\r\n\r\n    private _format = 12;\r\n\r\n    @Input()\r\n    set min(value: string | Moment) {\r\n        if (typeof value === 'string') {\r\n            this._min = TimeAdapter.convertTimeToMoment(value);\r\n            return;\r\n        }\r\n        this._min = value;\r\n    }\r\n\r\n    get min(): string | Moment {\r\n        return this._min;\r\n    }\r\n\r\n    private _min: string | Moment;\r\n\r\n    @Input()\r\n    set max(value: string | Moment) {\r\n        if (typeof value === 'string') {\r\n            this._max = TimeAdapter.convertTimeToMoment(value);\r\n            return;\r\n        }\r\n        this._max = value;\r\n    }\r\n\r\n    get max(): string | Moment {\r\n        return this._max;\r\n    }\r\n\r\n    private _max: string | Moment;\r\n\r\n    @Input()\r\n    set value(value: string) {\r\n        if (!value) {\r\n            this._value = '';\r\n            this.updateInputValue();\r\n            return;\r\n        }\r\n        const time = TimeAdapter.formatTime(value, this._format);\r\n        if (TimeAdapter.isTimeAvailable(time, <Moment>this._min, <Moment>this._max, 'minutes')) {\r\n            this._value = time;\r\n            this.updateInputValue();\r\n            return;\r\n        }\r\n        console.warn('Selected time doesn\\'t match min or max value');\r\n    }\r\n\r\n    get value(): string {\r\n        return this._value;\r\n    }\r\n\r\n    private _value = '';\r\n\r\n    @Input('ngxTimepicker')\r\n    set timepicker(picker: NgxMaterialTimepickerComponent) {\r\n        this.registerTimepicker(picker);\r\n    }\r\n    private _timepicker: NgxMaterialTimepickerComponent;\r\n\r\n    @Input() disabled: boolean;\r\n    @Input() disableClick: boolean;\r\n    private timepickerSubscriptions: Subscription[] = [];\r\n    onTouched = () => {};\r\n    private onChange: (value: any) => void = () => {};\r\n\r\n    constructor(private elementRef: ElementRef) {\r\n    }\r\n\r\n    private set defaultTime(time: string) {\r\n        this._timepicker.setDefaultTime(time);\r\n    }\r\n\r\n    onInput(value: string) {\r\n        this.value = value;\r\n        this.onChange(value);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['value'] && changes['value'].currentValue) {\r\n            this.defaultTime = changes['value'].currentValue;\r\n        }\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(event) {\r\n        if (!this.disableClick) {\r\n            this._timepicker.open();\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    writeValue(value: string): void {\r\n        this.value = value;\r\n        this.defaultTime = value;\r\n    }\r\n\r\n    registerOnChange(fn: (value: any) => void): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.timepickerSubscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n    private registerTimepicker(picker: NgxMaterialTimepickerComponent): void {\r\n        if (picker) {\r\n            this._timepicker = picker;\r\n            this._timepicker.registerInput(this);\r\n            this.timepickerSubscriptions.push(this._timepicker.timeSet.subscribe((time: string) => {\r\n                this.value = time;\r\n                this.onChange(this._value);\r\n                this.onTouched();\r\n            }));\r\n            this.timepickerSubscriptions.push(\r\n                this._timepicker.closed.subscribe(() => this.defaultTime = this._value));\r\n        } else {\r\n            throw new Error('NgxMaterialTimepickerComponent is not defined.' +\r\n                ' Please make sure you passed the timepicker to ngxTimepicker directive');\r\n        }\r\n    }\r\n\r\n    private updateInputValue(): void {\r\n        this.elementRef.nativeElement.value = this.value;\r\n    }\r\n\r\n}\r\n\r\n","import {AfterViewInit, Directive, ElementRef, Input} from '@angular/core';\r\nimport {NgxMaterialTimepickerTheme} from '../models/ngx-material-timepicker-theme.interface';\r\n\r\n@Directive({selector: '[ngxMaterialTimepickerTheme]'})\r\nexport class NgxMaterialTimepickerThemeDirective implements AfterViewInit {\r\n\r\n    @Input('ngxMaterialTimepickerTheme') theme: NgxMaterialTimepickerTheme;\r\n\r\n    private element: HTMLElement;\r\n\r\n    constructor(elementRef: ElementRef) {\r\n        this.element = elementRef.nativeElement;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.theme) {\r\n            this.setTheme(this.theme);\r\n        }\r\n    }\r\n\r\n    private setTheme(theme): void {\r\n        for (let val in theme) {\r\n            if (theme.hasOwnProperty(val)) {\r\n                if (typeof theme[val] === 'string') {\r\n                    for (let prop in theme) {\r\n                        if (theme.hasOwnProperty(prop)) {\r\n                            this.element.style.setProperty(`--${camelCaseToDash(prop)}`, theme[prop]);\r\n                        }\r\n                    }\r\n                    return\r\n                }\r\n                this.setTheme(theme[val])\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\nfunction camelCaseToDash(myStr) {\r\n    return myStr.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n}\r\n","import {ClockFaceTime} from './models/clock-face-time.interface';\r\nimport * as _moment from 'moment';\r\nimport {TimeAdapter} from './services/time-adapter';\r\nimport {TimeFormat} from './models/time-format.enum';\r\nimport {DisabledTimeConfig} from './models/disabled-time-config.interface';\r\n\r\nconst moment = _moment;\r\n\r\nexport namespace TimepickerTime {\r\n\r\n    export function getHours(format: number): ClockFaceTime[] {\r\n        return Array(format).fill(1).map((v, i) => {\r\n            const angleStep = 30;\r\n            const time = v + i;\r\n            const angle = angleStep * time;\r\n            return {time: time === 24 ? 0 : time, angle};\r\n        });\r\n    }\r\n\r\n    export function disableHours(hours: ClockFaceTime[], config: DisabledTimeConfig): ClockFaceTime[] {\r\n        if (config.min || config.max) {\r\n\r\n            return hours.map(value => {\r\n                const hour = config.format === 24 ? value.time : TimeAdapter.formatHour(+value.time, config.format, config.period);\r\n                const currentTime = moment().hour(+hour).format(TimeFormat.TWELVE);\r\n\r\n                return {\r\n                    ...value,\r\n                    disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'hours')\r\n                };\r\n            });\r\n        }\r\n        return hours;\r\n    }\r\n\r\n    export function getMinutes(gap = 1): ClockFaceTime[] {\r\n        const minutesCount = 60;\r\n        const angleStep = 360 / minutesCount;\r\n        const minutes = [];\r\n\r\n        for (let i = 0; i < minutesCount; i++) {\r\n            const angle = angleStep * i;\r\n            if (i % gap === 0) {\r\n                minutes.push({time: i, angle: angle !== 0 ? angle : 360});\r\n            }\r\n        }\r\n        return minutes;\r\n    }\r\n\r\n    export function disableMinutes(minutes: ClockFaceTime[], selectedHour: number, config: DisabledTimeConfig) {\r\n        if (config.min || config.max) {\r\n\r\n            const hour = TimeAdapter.formatHour(selectedHour, config.format, config.period);\r\n\r\n            return minutes.map(value => {\r\n                const currentTime = moment().hour(hour).minute(+value.time).format(TimeFormat.TWELVE);\r\n\r\n                return {\r\n                    ...value,\r\n                    disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'minutes')\r\n                };\r\n            });\r\n        }\r\n        return minutes;\r\n    }\r\n}\r\n","import {EventEmitter, Input, Output} from '@angular/core';\r\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\r\nimport {Moment} from 'moment';\r\nimport {TimepickerTime} from '../../timepicker-time.namespace';\r\n\r\n\r\nexport class NgxMaterialTimepickerHoursFace {\r\n\r\n    @Input() selectedHour: ClockFaceTime;\r\n    @Input() minTime: Moment;\r\n    @Input() maxTime: Moment;\r\n    @Input() format: number;\r\n\r\n    @Output() hourChange = new EventEmitter<ClockFaceTime>();\r\n    @Output() hourSelected = new EventEmitter<null>();\r\n\r\n    hoursList: ClockFaceTime[] = [];\r\n\r\n    protected constructor(format: number) {\r\n        this.hoursList = TimepickerTime.getHours(format);\r\n    }\r\n}\r\n","import {AfterContentInit, Component} from '@angular/core';\r\nimport {NgxMaterialTimepickerHoursFace} from '../timepicker-hours-face/ngx-material-timepicker-hours-face';\r\nimport {TimepickerTime} from '../../timepicker-time.namespace';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-24-hours-face',\r\n    templateUrl: 'ngx-material-timepicker-24-hours-face.component.html'\r\n})\r\n\r\nexport class NgxMaterialTimepicker24HoursFaceComponent extends NgxMaterialTimepickerHoursFace implements AfterContentInit {\r\n\r\n    constructor() {\r\n        super(24);\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.hoursList = TimepickerTime.disableHours(this.hoursList, {\r\n            min: this.minTime,\r\n            max: this.maxTime,\r\n            format: this.format\r\n        });\r\n    }\r\n}\r\n","import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\r\nimport {NgxMaterialTimepickerHoursFace} from '../timepicker-hours-face/ngx-material-timepicker-hours-face';\r\nimport {TimePeriod} from '../../models/time-period.enum';\r\nimport {TimepickerTime} from '../../timepicker-time.namespace';\r\n\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-12-hours-face',\r\n    templateUrl: 'ngx-material-timepicker-12-hours-face.component.html'\r\n})\r\n\r\nexport class NgxMaterialTimepicker12HoursFaceComponent extends NgxMaterialTimepickerHoursFace implements OnChanges {\r\n\r\n    @Input() period: TimePeriod;\r\n\r\n    constructor() {\r\n        super(12);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['period'] && changes['period'].currentValue) {\r\n            this.hoursList = TimepickerTime.disableHours(this.hoursList, {\r\n                min: this.minTime,\r\n                max: this.maxTime,\r\n                format: this.format,\r\n                period: this.period\r\n            });\r\n        }\r\n    }\r\n}\r\n","import {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges} from '@angular/core';\r\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\r\nimport {TimeUnit} from '../../models/time-unit.enum';\r\nimport {TimePeriod} from '../../models/time-period.enum';\r\nimport {Moment} from 'moment';\r\nimport {TimepickerTime} from '../../timepicker-time.namespace';\r\n\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-minutes-face',\r\n    templateUrl: './ngx-material-timepicker-minutes-face.component.html'\r\n})\r\nexport class NgxMaterialTimepickerMinutesFaceComponent implements OnChanges {\r\n\r\n    minutesList: ClockFaceTime[] = [];\r\n    timeUnit = TimeUnit;\r\n\r\n    @Input() selectedMinute: ClockFaceTime;\r\n    @Input() selectedHour: number;\r\n    @Input() period: TimePeriod;\r\n    @Input() minTime: Moment;\r\n    @Input() maxTime: Moment;\r\n    @Input() format: number;\r\n    @Input() minutesGap: number;\r\n\r\n    @Output() minuteChange = new EventEmitter<ClockFaceTime>();\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['period'] && changes['period'].currentValue) {\r\n            const minutes = TimepickerTime.getMinutes(this.minutesGap);\r\n            this.minutesList = TimepickerTime.disableMinutes(minutes, this.selectedHour, {\r\n                min: this.minTime,\r\n                max: this.maxTime,\r\n                format: this.format,\r\n                period: this.period\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    HostListener,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    Output,\r\n    SimpleChanges,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\r\nimport {TimeUnit} from '../../models/time-unit.enum';\r\n\r\nconst CLOCK_HAND_STYLES = {\r\n    small: {\r\n        height: '75px',\r\n        top: 'calc(50% - 75px)'\r\n    },\r\n    large: {\r\n        height: '103px',\r\n        top: 'calc(50% - 103px)'\r\n    }\r\n};\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-face',\r\n    templateUrl: './ngx-material-timepicker-face.component.html',\r\n    styleUrls: ['./ngx-material-timepicker-face.component.scss']\r\n})\r\nexport class NgxMaterialTimepickerFaceComponent implements AfterViewInit, OnChanges, OnDestroy {\r\n\r\n    timeUnit = TimeUnit;\r\n\r\n    isClockFaceDisabled: boolean;\r\n    innerClockFaceSize = 85;\r\n\r\n    @Input() faceTime: ClockFaceTime[];\r\n    @Input() selectedTime: ClockFaceTime;\r\n    @Input() unit: TimeUnit;\r\n    @Input() format: number;\r\n    @Input() minutesGap: number;\r\n\r\n    @Output() timeChange = new EventEmitter<ClockFaceTime>();\r\n    @Output() timeSelected = new EventEmitter<null>();\r\n\r\n    @ViewChild('clockFace') clockFace: ElementRef;\r\n    @ViewChild('clockHand') clockHand: ElementRef;\r\n\r\n    private isStarted: boolean;\r\n    private touchStartHandler: () => any;\r\n    private touchEndHandler: () => any;\r\n\r\n    ngAfterViewInit() {\r\n        this.setClockHandPosition();\r\n        this.addTouchEvents();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        const faceTimeChanges = changes['faceTime'];\r\n        const selectedTimeChanges = changes['selectedTime'];\r\n\r\n        if ((faceTimeChanges && faceTimeChanges.currentValue)\r\n            && (selectedTimeChanges && selectedTimeChanges.currentValue)) {\r\n            /* Set time according to passed an input value */\r\n            this.selectedTime = this.faceTime.find(time => time.time === this.selectedTime.time);\r\n        }\r\n        if (selectedTimeChanges && selectedTimeChanges.currentValue) {\r\n            this.setClockHandPosition();\r\n        }\r\n        if (faceTimeChanges && faceTimeChanges.currentValue) {\r\n            // To avoid an error ExpressionChangedAfterItHasBeenCheckedError\r\n            setTimeout(() => this.selectAvailableTime());\r\n        }\r\n    }\r\n\r\n\r\n    trackByTime(_, time: ClockFaceTime): string | number {\r\n        return time.time;\r\n    }\r\n\r\n    @HostListener('mousedown', ['$event'])\r\n    onMousedown(e: MouseEvent | TouchEvent) {\r\n        e.preventDefault();\r\n        this.isStarted = true;\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    @HostListener('touchmove', ['$event.changedTouches[0]'])\r\n    @HostListener('touchend', ['$event.changedTouches[0]'])\r\n    @HostListener('mousemove', ['$event'])\r\n    selectTime(e: MouseEvent | Touch): void {\r\n\r\n        if (!this.isStarted && (e instanceof MouseEvent && e.type !== 'click')) {\r\n            return;\r\n        }\r\n        const clockFaceCords = this.clockFace.nativeElement.getBoundingClientRect();\r\n\r\n        /* Get x0 and y0 of the circle */\r\n        const centerX = clockFaceCords.left + clockFaceCords.width / 2;\r\n        const centerY = clockFaceCords.top + clockFaceCords.height / 2;\r\n        /* Counting the arctangent and convert it to from radian to deg */\r\n        const arctangent = Math.atan(Math.abs(e.clientX - centerX) / Math.abs(e.clientY - centerY)) * 180 / Math.PI;\r\n        /* Get angle according to quadrant */\r\n        const circleAngle = countAngleByCords(centerX, centerY, e.clientX, e.clientY, arctangent);\r\n        /* Check if selected time from the inner clock face (24 hours format only) */\r\n        const isInnerClockChosen = this.format && this.isInnerClockFace(centerX, centerY, e.clientX, e.clientY);\r\n        /* Round angle according to angle step */\r\n        const angleStep = this.unit === TimeUnit.MINUTE ? 6 : 30;\r\n        const roundedAngle = isInnerClockChosen\r\n            ? roundAngle(circleAngle, angleStep) + 360\r\n            : roundAngle(circleAngle, angleStep);\r\n\r\n        const selectedTime = this.faceTime.find(val => val.angle === roundedAngle);\r\n\r\n        if (selectedTime && !selectedTime.disabled) {\r\n            this.timeChange.next(selectedTime);\r\n\r\n            /* To let know whether user ended interaction with clock face */\r\n            if (!this.isStarted) {\r\n                this.timeSelected.next();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    @HostListener('mouseup', ['$event'])\r\n    onMouseup(e: MouseEvent | TouchEvent) {\r\n        e.preventDefault();\r\n        this.isStarted = false;\r\n    }\r\n\r\n    isHourSelected(hour: number): boolean {\r\n        return (hour === this.selectedTime.time) && !this.isClockFaceDisabled;\r\n    }\r\n\r\n    isMinuteSelected(minute: number): boolean {\r\n        return ((this.selectedTime.time === minute) && (minute % (this.minutesGap || 5) === 0)) && !this.isClockFaceDisabled;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.removeTouchEvents();\r\n    }\r\n\r\n    private addTouchEvents(): void {\r\n        this.touchStartHandler = this.onMousedown.bind(this);\r\n        this.touchEndHandler = this.onMouseup.bind(this);\r\n\r\n        this.clockFace.nativeElement.addEventListener('touchstart', this.touchStartHandler);\r\n        this.clockFace.nativeElement.addEventListener('touchend', this.touchEndHandler);\r\n    }\r\n\r\n    private removeTouchEvents(): void {\r\n        this.clockFace.nativeElement.removeEventListener('touchstart', this.touchStartHandler);\r\n        this.clockFace.nativeElement.removeEventListener('touchend', this.touchEndHandler);\r\n    }\r\n\r\n    private setClockHandPosition(): void {\r\n        if (this.format === 24) {\r\n            if (this.selectedTime.time > 12 || this.selectedTime.time === 0) {\r\n                this.decreaseClockHand();\r\n            } else {\r\n                this.increaseClockHand();\r\n            }\r\n        }\r\n\r\n        this.clockHand.nativeElement.style.transform = `rotate(${this.selectedTime.angle}deg)`;\r\n    }\r\n\r\n    private selectAvailableTime(): void {\r\n        const currentTime = this.faceTime.find(time => this.selectedTime.time === time.time);\r\n        this.isClockFaceDisabled = this.faceTime.every(time => time.disabled);\r\n\r\n        if ((currentTime && currentTime.disabled) && !this.isClockFaceDisabled) {\r\n            const availableTime = this.faceTime.find(time => !time.disabled);\r\n\r\n            this.timeChange.next(availableTime);\r\n        }\r\n    }\r\n\r\n    private isInnerClockFace(x0: number, y0: number, x: number, y: number): boolean {\r\n        /* Detect whether time from the inner clock face or not (24 format only) */\r\n        return Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)) < this.innerClockFaceSize;\r\n    }\r\n\r\n    private decreaseClockHand(): void {\r\n        this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.small.height;\r\n        this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.small.top;\r\n    }\r\n\r\n    private increaseClockHand(): void {\r\n        this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.large.height;\r\n        this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.large.top;\r\n    }\r\n}\r\n\r\nfunction roundAngle(angle: number, step: number): number {\r\n    return Math.round(angle / step) * step;\r\n}\r\n\r\nfunction countAngleByCords(x0: number, y0: number, x: number, y: number, currentAngle: number): number {\r\n    if (y > y0 && x >= x0) {// II quarter\r\n        return 180 - currentAngle;\r\n    } else if (y > y0 && x < x0) {// III quarter\r\n        return 180 + currentAngle;\r\n    } else if (y < y0 && x < x0) {// IV quarter\r\n        return 360 - currentAngle;\r\n    } else {// I quarter\r\n        return currentAngle;\r\n    }\r\n}\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-button',\r\n    templateUrl: './ngx-material-timepicker-button.component.html',\r\n    styleUrls: ['./ngx-material-timepicker-button.component.scss']\r\n})\r\nexport class NgxMaterialTimepickerButtonComponent {\r\n}\r\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges} from '@angular/core';\r\nimport {TimePeriod} from '../../models/time-period.enum';\r\nimport {TimeUnit} from '../../models/time-unit.enum';\r\nimport {TimepickerTime} from '../../timepicker-time.namespace';\r\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\r\nimport {Moment} from 'moment';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-dial',\r\n    templateUrl: 'ngx-material-timepicker-dial.component.html',\r\n    styleUrls: ['ngx-material-timepicker-dial.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NgxMaterialTimepickerDialComponent implements OnChanges {\r\n\r\n    timeUnit = TimeUnit;\r\n\r\n    hours: ClockFaceTime[];\r\n    minutes: ClockFaceTime[];\r\n\r\n    @Input() hour: number | string;\r\n    @Input() minute: number | string;\r\n    @Input() format: number;\r\n    @Input() period: TimePeriod;\r\n    @Input() activeTimeUnit: TimeUnit;\r\n    @Input() minTime: Moment;\r\n    @Input() maxTime: Moment;\r\n    @Input() isEditable: boolean;\r\n    @Input() minutesGap: number;\r\n\r\n    @Output() periodChanged = new EventEmitter<TimePeriod>();\r\n    @Output() timeUnitChanged = new EventEmitter<TimeUnit>();\r\n    @Output() hourChanged = new EventEmitter<ClockFaceTime>();\r\n    @Output() minuteChanged = new EventEmitter<ClockFaceTime>();\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['period'] && changes['period'].currentValue\r\n            || changes['format'] && changes['format'].currentValue) {\r\n            const hours = TimepickerTime.getHours(this.format);\r\n\r\n            this.hours = TimepickerTime.disableHours(hours, {\r\n                min: this.minTime,\r\n                max: this.maxTime,\r\n                format: this.format,\r\n                period: this.period\r\n            });\r\n        }\r\n        if (changes['period'] && changes['period'].currentValue\r\n            || changes['hour'] && changes['hour'].currentValue) {\r\n            const minutes = TimepickerTime.getMinutes(this.minutesGap);\r\n\r\n            this.minutes = TimepickerTime.disableMinutes(minutes, +this.hour, {\r\n                min: this.minTime,\r\n                max: this.maxTime,\r\n                format: this.format,\r\n                period: this.period\r\n            });\r\n        }\r\n    }\r\n\r\n    changeTimeUnit(unit: TimeUnit): void {\r\n        this.timeUnitChanged.next(unit);\r\n    }\r\n\r\n    changePeriod(period: TimePeriod): void {\r\n        this.periodChanged.next(period);\r\n    }\r\n\r\n    changeHour(hour: ClockFaceTime): void {\r\n        this.hourChanged.next(hour);\r\n    }\r\n\r\n    changeMinute(minute: ClockFaceTime): void {\r\n        this.minuteChanged.next(minute);\r\n    }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport {TimeUnit} from '../models/time-unit.enum';\r\n\r\n@Pipe({\r\n    name: 'timeFormatter'\r\n})\r\nexport class TimeFormatterPipe implements PipeTransform {\r\n\r\n    transform(time: number, timeUnit: TimeUnit): any {\r\n        if (time === undefined) {\r\n            return time;\r\n        }\r\n        switch (timeUnit) {\r\n            case TimeUnit.HOUR:\r\n                return moment.utc(time * 3600 * 1000).format('HH');\r\n            case TimeUnit.MINUTE:\r\n                return moment.utc(time * 60 * 1000).format('mm');\r\n            default:\r\n                throw new Error('no such time unit');\r\n        }\r\n    }\r\n\r\n}\r\n","import {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges} from '@angular/core';\r\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\r\nimport {TimeUnit} from '../../models/time-unit.enum';\r\nimport {TimeFormatterPipe} from '../../pipes/time-formatter.pipe';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-dial-control',\r\n    templateUrl: 'ngx-material-timepicker-dial-control.component.html',\r\n    styleUrls: ['ngx-material-timepicker-dial-control.component.scss']\r\n})\r\nexport class NgxMaterialTimepickerDialControlComponent implements OnChanges {\r\n\r\n    previousTime: number | string;\r\n\r\n    @Input() timeList: ClockFaceTime[];\r\n    @Input() timeUnit: TimeUnit;\r\n    @Input() time: string;\r\n    @Input() isActive: boolean;\r\n    @Input() isEditable: boolean;\r\n\r\n    @Output() timeUnitChanged = new EventEmitter<TimeUnit>();\r\n    @Output() timeChanged = new EventEmitter<ClockFaceTime>();\r\n\r\n    private get selectedTime(): ClockFaceTime {\r\n        if (!!this.time) {\r\n            return this.timeList.find(t => t.time === +this.time);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['time'] && (changes['time'].currentValue !== undefined)) {\r\n            if (this.isEditable && !changes['time'].firstChange) {\r\n                return;\r\n            }\r\n            this.time = new TimeFormatterPipe().transform(+changes['time'].currentValue, this.timeUnit)\r\n        }\r\n    }\r\n\r\n    saveTimeAndChangeTimeUnit(event: FocusEvent, unit: TimeUnit): void {\r\n        event.preventDefault();\r\n        this.previousTime = this.time;\r\n        this.timeUnitChanged.next(unit);\r\n    }\r\n\r\n    updateTime(): void {\r\n        const time = this.selectedTime;\r\n        if (time) {\r\n            this.timeChanged.next(time);\r\n            this.previousTime = time.time;\r\n        }\r\n    }\r\n\r\n    formatTime(): void {\r\n        if (this.isEditable) {\r\n            const time = this.time || this.previousTime;\r\n            this.time = new TimeFormatterPipe().transform(+time, this.timeUnit);\r\n        }\r\n    }\r\n\r\n    onKeyDown(e: KeyboardEvent): void {\r\n        const char = String.fromCharCode(e.keyCode);\r\n\r\n\r\n        if ((!isInputAllowed(e)) || isTimeDisabledToChange(this.time, char, this.timeList)) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        if (isInputAllowed(e)) {\r\n            this.changeTimeByArrow(e.keyCode);\r\n        }\r\n    }\r\n\r\n    private changeTimeByArrow(keyCode: number): void {\r\n        const ARROW_UP = 38;\r\n        const ARROW_DOWN = 40;\r\n        let time: string;\r\n\r\n        if (keyCode === ARROW_UP) {\r\n            time = String(+this.time + 1);\r\n        } else if (keyCode === ARROW_DOWN) {\r\n            time = String(+this.time - 1);\r\n        }\r\n\r\n        if (!isTimeUnavailable(time, this.timeList)) {\r\n            this.time = time;\r\n            this.updateTime();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction isInputAllowed(e: KeyboardEvent): boolean {\r\n    // Allow: backspace, delete, tab, escape, enter\r\n    if ([46, 8, 9, 27, 13].some(n => n === e.keyCode) ||\r\n        // Allow: Ctrl/cmd+A\r\n        (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n        // Allow: Ctrl/cmd+C\r\n        (e.keyCode == 67 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n        // Allow: Ctrl/cmd+X\r\n        (e.keyCode == 88 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n        // Allow: home, end, left, right, up, down\r\n        (e.keyCode >= 35 && e.keyCode <= 40)) {\r\n\r\n        return true;\r\n    }\r\n    return !((e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105))\r\n}\r\n\r\nfunction isTimeDisabledToChange(currentTime: string, nextTime: string, timeList: ClockFaceTime[]): boolean {\r\n    const isNumber = /\\d/.test(nextTime);\r\n\r\n    if (isNumber) {\r\n        const time = currentTime + nextTime;\r\n        return isTimeUnavailable(time, timeList);\r\n    }\r\n}\r\n\r\nfunction isTimeUnavailable(time: string, timeList: ClockFaceTime[]): boolean {\r\n    const selectedTime = timeList.find(value => value.time === +time);\r\n    return !selectedTime || (selectedTime && selectedTime.disabled);\r\n}\r\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {TimePeriod} from '../../models/time-period.enum';\r\nimport {TimeUnit} from '../../models/time-unit.enum';\r\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\r\nimport {TimepickerTime} from '../../timepicker-time.namespace';\r\nimport {Moment} from 'moment';\r\nimport {animate, sequence, style, transition, trigger} from '@angular/animations';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-period',\r\n    templateUrl: 'ngx-material-timepicker-period.component.html',\r\n    styleUrls: ['ngx-material-timepicker-period.component.scss'],\r\n    animations: [\r\n        trigger('scaleInOut', [\r\n            transition(':enter', [\r\n                style({transform: 'scale(0)'}),\r\n                animate('.2s', style({transform: 'scale(1)'})),\r\n                sequence([\r\n                    animate('3s', style({opacity: 1})),\r\n                    animate('.3s', style({opacity: 0}))\r\n                ])\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class NgxMaterialTimepickerPeriodComponent {\r\n\r\n    timePeriod = TimePeriod;\r\n    isPeriodAvailable = true;\r\n\r\n    @Input() selectedPeriod: TimePeriod;\r\n    @Input() format: number;\r\n    @Input() activeTimeUnit: TimeUnit;\r\n    @Input() hours: ClockFaceTime[];\r\n    @Input() minutes: ClockFaceTime[];\r\n    @Input() minTime: Moment;\r\n    @Input() maxTime: Moment;\r\n    @Input() selectedHour: number | string;\r\n\r\n    @Output() periodChanged = new EventEmitter<TimePeriod>();\r\n\r\n    changePeriod(period: TimePeriod): void {\r\n        this.isPeriodAvailable = this.isSwitchPeriodAvailable(period);\r\n        if (this.isPeriodAvailable) {\r\n            this.periodChanged.next(period);\r\n        }\r\n    }\r\n\r\n    animationDone(): void {\r\n        this.isPeriodAvailable = true;\r\n    }\r\n\r\n    private isSwitchPeriodAvailable(period: TimePeriod): boolean {\r\n        const time = this.getDisabledTimeByPeriod(period);\r\n        return !time.every(t => t.disabled);\r\n    }\r\n\r\n    private getDisabledTimeByPeriod(period: TimePeriod): ClockFaceTime[] {\r\n        switch (this.activeTimeUnit) {\r\n            case TimeUnit.HOUR:\r\n                return TimepickerTime.disableHours(this.hours, {\r\n                    min: this.minTime,\r\n                    max: this.maxTime,\r\n                    format: this.format,\r\n                    period\r\n                });\r\n            case TimeUnit.MINUTE:\r\n                return TimepickerTime.disableMinutes(this.minutes, +this.selectedHour, {\r\n                    min: this.minTime,\r\n                    max: this.maxTime,\r\n                    format: this.format,\r\n                    period\r\n                });\r\n            default:\r\n                throw new Error('no such TimeUnit');\r\n        }\r\n    }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: 'styleSanitizer'\r\n})\r\nexport class StyleSanitizerPipe implements PipeTransform {\r\n\r\n    constructor(private domSanitizer: DomSanitizer) {\r\n    }\r\n\r\n    transform(value: string): any {\r\n        if (!value) {\r\n            return value;\r\n        }\r\n        return this.domSanitizer.bypassSecurityTrustStyle(value);\r\n    }\r\n\r\n}\r\n","import {Directive, HostListener} from '@angular/core';\r\nimport {NgxMaterialTimepickerEventService} from '../services/ngx-material-timepicker-event.service';\r\n\r\n@Directive({\r\n    selector: '[overlay]'\r\n})\r\nexport class OverlayDirective {\r\n\r\n    constructor(private eventService: NgxMaterialTimepickerEventService) {\r\n    }\r\n\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(e: MouseEvent) {\r\n        this.eventService.dispatchEvent(e);\r\n        e.preventDefault();\r\n    }\r\n\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'minutesFormatter'\r\n})\r\nexport class MinutesFormatterPipe implements PipeTransform {\r\n\r\n    transform(minute: number, gap = 5): number | string {\r\n        if (!minute) {\r\n            return minute;\r\n        }\r\n\r\n        return minute % gap === 0 ? minute : '';\r\n    }\r\n\r\n}\r\n","import {Directive, ElementRef, Inject, Input, OnChanges, OnDestroy, Optional} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n@Directive({\r\n    selector: '[timepickerAutofocus]'\r\n})\r\nexport class AutofocusDirective implements OnChanges, OnDestroy {\r\n\r\n    @Input('timepickerAutofocus') isFocusActive: boolean;\r\n\r\n    private activeElement: HTMLElement;\r\n\r\n    constructor(private element: ElementRef, @Optional() @Inject(DOCUMENT) private document: any) {\r\n        this.activeElement = this.document.activeElement;\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (this.isFocusActive) {\r\n            // To avoid ExpressionChangedAfterItHasBeenCheckedError;\r\n            setTimeout(() => this.element.nativeElement.focus());\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // To avoid ExpressionChangedAfterItHasBeenCheckedError;\r\n        setTimeout(() => this.activeElement.focus());\r\n    }\r\n}\r\n","import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgxMaterialTimepickerComponent} from './ngx-material-timepicker.component';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {NgxMaterialTimepickerToggleComponent} from './components/timepicker-toggle-button/ngx-material-timepicker-toggle.component';\r\nimport {TimepickerDirective} from './directives/ngx-timepicker.directive';\r\nimport {NgxMaterialTimepickerToggleIconDirective} from './directives/ngx-material-timepicker-toggle-icon.directive';\r\nimport {NgxMaterialTimepickerThemeDirective} from './directives/ngx-material-timepicker-theme.directive';\r\nimport {NgxMaterialTimepicker24HoursFaceComponent} from './components/timepicker-24-hours-face/ngx-material-timepicker-24-hours-face.component';\r\nimport {NgxMaterialTimepicker12HoursFaceComponent} from './components/timepicker-12-hours-face/ngx-material-timepicker-12-hours-face.component';\r\nimport {NgxMaterialTimepickerMinutesFaceComponent} from './components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component';\r\nimport {NgxMaterialTimepickerFaceComponent} from './components/timepicker-face/ngx-material-timepicker-face.component';\r\nimport {NgxMaterialTimepickerButtonComponent} from './components/timepicker-button/ngx-material-timepicker-button.component';\r\nimport {NgxMaterialTimepickerDialComponent} from './components/timepicker-dial/ngx-material-timepicker-dial.component';\r\nimport {NgxMaterialTimepickerDialControlComponent} from './components/timepicker-dial-control/ngx-material-timepicker-dial-control.component';\r\nimport {NgxMaterialTimepickerPeriodComponent} from './components/timepicker-period/ngx-material-timepicker-period.component';\r\nimport {StyleSanitizerPipe} from './pipes/style-sanitizer.pipe';\r\nimport {TimeFormatterPipe} from './pipes/time-formatter.pipe';\r\nimport {OverlayDirective} from './directives/overlay.directive';\r\nimport {MinutesFormatterPipe} from './pipes/minutes-formatter.pipe';\r\nimport {AutofocusDirective} from './directives/autofocus.directive';\r\nimport {NgxMaterialTimepickerService} from './services/ngx-material-timepicker.service';\r\nimport {NgxMaterialTimepickerEventService} from './services/ngx-material-timepicker-event.service';\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule\r\n    ],\r\n    exports: [\r\n        NgxMaterialTimepickerComponent,\r\n        NgxMaterialTimepickerToggleComponent,\r\n        TimepickerDirective,\r\n        NgxMaterialTimepickerToggleIconDirective,\r\n        NgxMaterialTimepickerThemeDirective\r\n    ],\r\n    declarations: [\r\n        NgxMaterialTimepickerComponent,\r\n        NgxMaterialTimepicker24HoursFaceComponent,\r\n        NgxMaterialTimepicker12HoursFaceComponent,\r\n        NgxMaterialTimepickerMinutesFaceComponent,\r\n        NgxMaterialTimepickerFaceComponent,\r\n        NgxMaterialTimepickerToggleComponent,\r\n        NgxMaterialTimepickerButtonComponent,\r\n        NgxMaterialTimepickerDialComponent,\r\n        NgxMaterialTimepickerDialControlComponent,\r\n        NgxMaterialTimepickerPeriodComponent,\r\n        StyleSanitizerPipe,\r\n        TimeFormatterPipe,\r\n        TimepickerDirective,\r\n        OverlayDirective,\r\n        NgxMaterialTimepickerToggleIconDirective,\r\n        AutofocusDirective,\r\n        MinutesFormatterPipe,\r\n        NgxMaterialTimepickerThemeDirective\r\n    ]\r\n})\r\nexport class NgxMaterialTimepickerModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: NgxMaterialTimepickerModule,\r\n            providers: [NgxMaterialTimepickerService, NgxMaterialTimepickerEventService]\r\n        };\r\n    }\r\n}\r\n"],"names":["moment","_moment","moment_","BehaviorSubject","Injectable","Subject","EventEmitter","merge","filter","Component","trigger","transition","style","animate","Input","Output","ViewChild","HostListener","Directive","ContentChild","NG_VALUE_ACCESSOR","forwardRef","ElementRef","tslib_1.__extends","ChangeDetectionStrategy","moment.utc","Pipe","sequence","DomSanitizer","Optional","Inject","DOCUMENT","NgModule","CommonModule","FormsModule"],"mappings":"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"}
